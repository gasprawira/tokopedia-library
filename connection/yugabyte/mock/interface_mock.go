// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package interface_mock is a generated GoMock package.
package interface_mock

import (
	reflect "reflect"

	yugabyte "github.com/gasprawira/tokopedia-library/connection/yugabyte"
	gomock "github.com/golang/mock/gomock"
	gocql "github.com/yugabyte/gocql"
)

// MockInterfaceYugabyte is a mock of InterfaceYugabyte interface.
type MockInterfaceYugabyte struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceYugabyteMockRecorder
}

// MockInterfaceYugabyteMockRecorder is the mock recorder for MockInterfaceYugabyte.
type MockInterfaceYugabyteMockRecorder struct {
	mock *MockInterfaceYugabyte
}

// NewMockInterfaceYugabyte creates a new mock instance.
func NewMockInterfaceYugabyte(ctrl *gomock.Controller) *MockInterfaceYugabyte {
	mock := &MockInterfaceYugabyte{ctrl: ctrl}
	mock.recorder = &MockInterfaceYugabyteMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterfaceYugabyte) EXPECT() *MockInterfaceYugabyteMockRecorder {
	return m.recorder
}

// Append mocks base method.
func (m *MockInterfaceYugabyte) Append(data yugabyte.YugabyteData, metricInfo []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Append", data, metricInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Append indicates an expected call of Append.
func (mr *MockInterfaceYugabyteMockRecorder) Append(data, metricInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Append", reflect.TypeOf((*MockInterfaceYugabyte)(nil).Append), data, metricInfo)
}

// CloseSession mocks base method.
func (m *MockInterfaceYugabyte) CloseSession() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CloseSession")
}

// CloseSession indicates an expected call of CloseSession.
func (mr *MockInterfaceYugabyteMockRecorder) CloseSession() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseSession", reflect.TypeOf((*MockInterfaceYugabyte)(nil).CloseSession))
}

// CreateKeyspace mocks base method.
func (m *MockInterfaceYugabyte) CreateKeyspace(data yugabyte.YugabyteMeta) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateKeyspace", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateKeyspace indicates an expected call of CreateKeyspace.
func (mr *MockInterfaceYugabyteMockRecorder) CreateKeyspace(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateKeyspace", reflect.TypeOf((*MockInterfaceYugabyte)(nil).CreateKeyspace), data)
}

// CreateTable mocks base method.
func (m *MockInterfaceYugabyte) CreateTable(data yugabyte.YugabyteMeta) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTable", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTable indicates an expected call of CreateTable.
func (mr *MockInterfaceYugabyteMockRecorder) CreateTable(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTable", reflect.TypeOf((*MockInterfaceYugabyte)(nil).CreateTable), data)
}

// Delete mocks base method.
func (m *MockInterfaceYugabyte) Delete(data yugabyte.YugabyteData, metricInfo []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", data, metricInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockInterfaceYugabyteMockRecorder) Delete(data, metricInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockInterfaceYugabyte)(nil).Delete), data, metricInfo)
}

// DropTable mocks base method.
func (m *MockInterfaceYugabyte) DropTable(data yugabyte.YugabyteMeta) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DropTable", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// DropTable indicates an expected call of DropTable.
func (mr *MockInterfaceYugabyteMockRecorder) DropTable(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DropTable", reflect.TypeOf((*MockInterfaceYugabyte)(nil).DropTable), data)
}

// Get mocks base method.
func (m *MockInterfaceYugabyte) Get(data yugabyte.YugabyteData, metricInfo []string) ([]map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", data, metricInfo)
	ret0, _ := ret[0].([]map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockInterfaceYugabyteMockRecorder) Get(data, metricInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockInterfaceYugabyte)(nil).Get), data, metricInfo)
}

// GetSession mocks base method.
func (m *MockInterfaceYugabyte) GetSession() *gocql.Session {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSession")
	ret0, _ := ret[0].(*gocql.Session)
	return ret0
}

// GetSession indicates an expected call of GetSession.
func (mr *MockInterfaceYugabyteMockRecorder) GetSession() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockInterfaceYugabyte)(nil).GetSession))
}

// Insert mocks base method.
func (m *MockInterfaceYugabyte) Insert(data yugabyte.YugabyteData, metricInfo []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", data, metricInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockInterfaceYugabyteMockRecorder) Insert(data, metricInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockInterfaceYugabyte)(nil).Insert), data, metricInfo)
}

// Prepend mocks base method.
func (m *MockInterfaceYugabyte) Prepend(data yugabyte.YugabyteData, metricInfo []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Prepend", data, metricInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Prepend indicates an expected call of Prepend.
func (mr *MockInterfaceYugabyteMockRecorder) Prepend(data, metricInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Prepend", reflect.TypeOf((*MockInterfaceYugabyte)(nil).Prepend), data, metricInfo)
}

// Remove mocks base method.
func (m *MockInterfaceYugabyte) Remove(data yugabyte.YugabyteData, metricInfo []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", data, metricInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockInterfaceYugabyteMockRecorder) Remove(data, metricInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockInterfaceYugabyte)(nil).Remove), data, metricInfo)
}

// TruncateTable mocks base method.
func (m *MockInterfaceYugabyte) TruncateTable(data yugabyte.YugabyteMeta) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TruncateTable", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// TruncateTable indicates an expected call of TruncateTable.
func (mr *MockInterfaceYugabyteMockRecorder) TruncateTable(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TruncateTable", reflect.TypeOf((*MockInterfaceYugabyte)(nil).TruncateTable), data)
}

// Update mocks base method.
func (m *MockInterfaceYugabyte) Update(data yugabyte.YugabyteData, metricInfo []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", data, metricInfo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockInterfaceYugabyteMockRecorder) Update(data, metricInfo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockInterfaceYugabyte)(nil).Update), data, metricInfo)
}
